{
  "D:\\POC\\ecomm-poc\\server\\serverless.yml": {
    "versionFramework": "4.8.0",
    "servicePath": "D:\\POC\\ecomm-poc\\server\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "product-service",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Scan",
              "dynamodb:GetItem"
            ],
            "Resource": "arn:aws:dynamodb:us-east-1:*:table/product_list"
          }
        ],
        "stage": "dev",
        "versionFunctions": true
      },
      "functions": {
        "fetchProducts": {
          "handler": "index.handler",
          "timeout": 30,
          "memorySize": 512,
          "events": [
            {
              "http": {
                "path": "api/v1/products",
                "method": "get",
                "cors": true
              }
            },
            {
              "http": {
                "path": "api/v1/product/{id}",
                "method": "get",
                "cors": true
              }
            },
            {
              "http": {
                "path": "api/v1/cart",
                "method": "post",
                "cors": true
              }
            }
          ]
        }
      },
      "custom": {
        "serverless-offline": {
          "port": 3003
        }
      },
      "plugins": [
        "serverless-offline"
      ]
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Scan",
            "dynamodb:GetItem"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/product_list"
        }
      ],
      "stage": "dev",
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "error": {
      "message": "Unrecognized option \"port\". Run \"serverless offline --help\" for a list of all available options.",
      "stack": "ServerlessError3: Unrecognized option \"port\". Run \"serverless offline --help\" for a list of all available options.\n    at ensure_supported_command_default (file:///C:/Users/patil/.serverless/releases/4.8.0/package/dist/sf-core.js:1444:2605)\n    at runFramework (file:///C:/Users/patil/.serverless/releases/4.8.0/package/dist/sf-core.js:1467:1638)\n    at async TraditionalRunner.run (file:///C:/Users/patil/.serverless/releases/4.8.0/package/dist/sf-core.js:1463:28364)\n    at async route (file:///C:/Users/patil/.serverless/releases/4.8.0/package/dist/sf-core.js:1509:2779)\n    at async Object.run (file:///C:/Users/patil/.serverless/releases/4.8.0/package/dist/sf-core.js:1510:3668)\n    at async run2 (file:///C:/Users/patil/.serverless/releases/4.8.0/package/dist/sf-core.js:1510:4821)",
      "code": "UNSUPPORTED_CLI_OPTIONS"
    },
    "serviceRawFile": "service: product-service\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: us-east-1\r\n  iamRoleStatements:\r\n    - Effect: \"Allow\"\r\n      Action:\r\n        - \"dynamodb:Scan\"\r\n        - \"dynamodb:GetItem\"\r\n      Resource: \"arn:aws:dynamodb:us-east-1:*:table/product_list\"\r\n\r\nfunctions:\r\n  fetchProducts:\r\n    handler: index.handler\r\n    timeout: 30\r\n    memorySize: 512\r\n    events:\r\n      - http:\r\n          path: api/v1/products\r\n          method: get\r\n          cors: true\r\n      - http:\r\n          path: api/v1/product/{id}\r\n          method: get\r\n          cors: true\r\n      - http:\r\n          path: api/v1/cart\r\n          method: post\r\n          cors: true\r\n\r\ncustom:\r\n  serverless-offline:\r\n    port: 3003\r\n    \r\nplugins:\r\n  - serverless-offline\r\n",
    "command": [
      "offline"
    ],
    "options": {
      "port": "3003"
    },
    "orgId": "6c869b51-1600-4987-b297-43dfba5d8d1b",
    "orgName": "swapnil211",
    "userId": "dTjfDYq8MLnqcnQMQh",
    "userName": "swapnil211",
    "serviceProviderAwsAccountId": "836972362163",
    "serviceProviderAwsCfStackName": "product-service-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:836972362163:stack/product-service-dev/be9369d0-fd8e-11ef-892d-0e3c18f7ab13",
    "serviceProviderAwsCfStackCreated": "2025-03-10T09:04:59.745Z",
    "serviceProviderAwsCfStackUpdated": "2025-03-10T13:10:14.425Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "FetchProductsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:836972362163:function:product-service-dev-fetchProducts:7",
        "Description": "Current Lambda function version",
        "ExportName": "sls-product-service-dev-FetchProductsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://krb0s4z1gb.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-product-service-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-a05af889-58f4",
        "ExportName": "sls-product-service-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}